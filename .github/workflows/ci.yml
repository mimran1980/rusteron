name: CI

on:
  push:
#  push:
#    branches: [master, staging, trying]
#  pull_request:
#    branches: [master]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: [default, static]
#        rust-version: ["stable", "stable 6 months ago"]
        rust-version: ["stable"]

    env:
      feature-flags: ${{ matrix.features != 'default' && format('--features {0}', matrix.features) || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}
          components: clippy, rustfmt

      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y uuid-dev

      # aeron archive cmake for some reason starts java
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

#      - name: Check formatting
#        run: cargo fmt --all -- --check
#
#      - name: Check clippy lints
#        run: cargo clippy --all ${{ env.feature-flags }} -- --deny warnings

      - name: Build
        run: cargo build ${{ env.feature-flags }}

      - name: Test
        run: cargo test --all --all-targets ${{ env.feature-flags }}